// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Actors_RestAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Actors_RestAPI.Models.Actor", b =>
                {
                    b.Property<int>("ActorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DOB")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EyeColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FrontImage")
                        .HasColumnType("longtext");

                    b.Property<string>("FullBodyImage")
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("HairColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SkinColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ActorId");

                    b.ToTable("Actors");
                });

            modelBuilder.Entity("Actors_RestAPI.Models.Character", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ActorId")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PlayId")
                        .HasColumnType("int");

                    b.Property<bool>("Principal")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("CharacterId");

                    b.HasIndex("ActorId");

                    b.HasIndex("PlayId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("Actors_RestAPI.Models.Music", b =>
                {
                    b.Property<int>("MusicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<string>("MusicLink")
                        .HasColumnType("longtext");

                    b.Property<int>("PlayId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("MusicId");

                    b.HasIndex("PlayId");

                    b.ToTable("Musics");
                });

            modelBuilder.Entity("Actors_RestAPI.Models.Play", b =>
                {
                    b.Property<int>("PlayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Poster")
                        .HasColumnType("longtext");

                    b.Property<int?>("ReferenceId")
                        .HasColumnType("int");

                    b.Property<string>("ScriptLink")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("PlayId");

                    b.ToTable("Plays");
                });

            modelBuilder.Entity("Actors_RestAPI.Models.Reference", b =>
                {
                    b.Property<int>("ReferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<string>("Link")
                        .HasColumnType("longtext");

                    b.Property<int>("PlayId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ReferenceId");

                    b.HasIndex("PlayId")
                        .IsUnique();

                    b.ToTable("References");
                });

            modelBuilder.Entity("Actors_RestAPI.Models.Character", b =>
                {
                    b.HasOne("Actors_RestAPI.Models.Actor", "Actor")
                        .WithMany("Characters")
                        .HasForeignKey("ActorId");

                    b.HasOne("Actors_RestAPI.Models.Play", "Play")
                        .WithMany("Characters")
                        .HasForeignKey("PlayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Play");
                });

            modelBuilder.Entity("Actors_RestAPI.Models.Music", b =>
                {
                    b.HasOne("Actors_RestAPI.Models.Play", "Play")
                        .WithMany("SoundTrack")
                        .HasForeignKey("PlayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Play");
                });

            modelBuilder.Entity("Actors_RestAPI.Models.Reference", b =>
                {
                    b.HasOne("Actors_RestAPI.Models.Play", "Play")
                        .WithOne("Reference")
                        .HasForeignKey("Actors_RestAPI.Models.Reference", "PlayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Play");
                });

            modelBuilder.Entity("Actors_RestAPI.Models.Actor", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("Actors_RestAPI.Models.Play", b =>
                {
                    b.Navigation("Characters");

                    b.Navigation("Reference");

                    b.Navigation("SoundTrack");
                });
#pragma warning restore 612, 618
        }
    }
}
